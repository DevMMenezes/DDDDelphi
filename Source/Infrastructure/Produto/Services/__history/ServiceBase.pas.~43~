unit ServiceBase;

interface

uses IServiceBase,
  Produto.Entity,
  SimpleInterface,
  SimpleDAO,
  SimpleAttributes,
  SimpleQueryFiredac,
  DMDataModule,
  System.Generics.Collections,
  System.Classes;

var
  FEntity: T;

type
  TServiceBase = class(TInterfacedObject, IService)

  public
    class function New(aEntity: TObject): IService;
    function FindAll(): IService;
    function FindByID(): IService;
    function Insert(): IService;
    function Update(): IService;
    function Delete(): IService;
  end;

implementation

{ TServiceBase }

function TServiceBase.Delete: IService;
begin

end;

function TServiceBase.FindAll: IService;
var
  Conexao: iSimpleQuery;
  DAOEntity: iSimpleDAO<TCliente>;
begin
  Conexao := TSimpleQueryFiredac.New(DMData.FBConnection);
  DAOEntity := TSimpleDAO <>

end;

function TServiceBase.FindByID: IService;
begin

end;

function TServiceBase.Insert: IService;
begin

end;

class function TServiceBase.New(aEntity: TObject): IService;
begin
  Result := Self.Create;
  FEntity := aEntity;
end;

function TServiceBase.Update: IService;
begin

end;

end.
